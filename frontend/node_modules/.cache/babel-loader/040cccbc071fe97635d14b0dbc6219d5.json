{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gabrielhauschildt/Desktop/ProshopDeployTest/frontend/src/components/Paginate.js\";\nimport React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Paginate = ({\n  pages,\n  page,\n  isAdmin = false,\n  isProject = false,\n  keyword = \"\"\n}) => {\n  return pages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n    children: //remember ...Array(pages) gives an array of undefined elements, then using .keys() retruns an array with the index of each element - something like [0,1,2] if you have 3 pages\n    // the prop isAdmin is passed to this component as \"true\" in the ProductListScreen\n    [...Array(pages).keys()].map(x => /*#__PURE__*/_jsxDEV(LinkContainer, {\n      to: !isProject ? !isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/productlist/${x + 1}` : `/admin/projectlist/${x + 1}`,\n      children: /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: x + 1 === page,\n        children: x + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, x + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Paginate;\nexport default Paginate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/Users/gabrielhauschildt/Desktop/ProshopDeployTest/frontend/src/components/Paginate.js"],"names":["React","Pagination","LinkContainer","Paginate","pages","page","isAdmin","isProject","keyword","Array","keys","map","x"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,KADgB;AAEhBC,EAAAA,IAFgB;AAGhBC,EAAAA,OAAO,GAAG,KAHM;AAIhBC,EAAAA,SAAS,GAAG,KAJI;AAKhBC,EAAAA,OAAO,GAAG;AALM,CAAD,KAMX;AACJ,SACEJ,KAAK,GAAG,CAAR,iBACE,QAAC,UAAD;AAAA,cACG;AACD;AACA,KAAC,GAAGK,KAAK,CAACL,KAAD,CAAL,CAAaM,IAAb,EAAJ,EAAyBC,GAAzB,CAA6BC,CAAC,iBAC5B,QAAC,aAAD;AAEE,MAAA,EAAE,EACA,CAACL,SAAD,GACI,CAACD,OAAD,GACEE,OAAO,GACJ,WAAUA,OAAQ,SAAQI,CAAC,GAAG,CAAE,EAD5B,GAEJ,SAAQA,CAAC,GAAG,CAAE,EAHnB,GAIG,sBAAqBA,CAAC,GAAG,CAAE,EALlC,GAMK,sBAAqBA,CAAC,GAAG,CAAE,EATpC;AAAA,6BAYE,QAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,MAAM,EAAEA,CAAC,GAAG,CAAJ,KAAUP,IAAnC;AAAA,kBAA0CO,CAAC,GAAG;AAA9C;AAAA;AAAA;AAAA;AAAA;AAZF,OACOA,CAAC,GAAG,CADX;AAAA;AAAA;AAAA;AAAA,YADF;AAHF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAwBD,CA/BD;;KAAMT,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React from \"react\"\nimport { Pagination } from \"react-bootstrap\"\nimport { LinkContainer } from \"react-router-bootstrap\"\n\nconst Paginate = ({\n  pages,\n  page,\n  isAdmin = false,\n  isProject = false,\n  keyword = \"\"\n}) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {//remember ...Array(pages) gives an array of undefined elements, then using .keys() retruns an array with the index of each element - something like [0,1,2] if you have 3 pages\n        // the prop isAdmin is passed to this component as \"true\" in the ProductListScreen\n        [...Array(pages).keys()].map(x => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isProject\n                ? !isAdmin\n                  ? keyword\n                    ? `/search/${keyword}/page/${x + 1}`\n                    : `/page/${x + 1}`\n                  : `/admin/productlist/${x + 1}`\n                : `/admin/projectlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n"]},"metadata":{},"sourceType":"module"}