{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/gabrielhauschildt/Desktop/ProShop/frontend/src/screens/ProjectEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProjectDetails, updateProject } from \"../actions/projectActions\";\nimport { PROJECT_UPDATE_RESET } from \"../constants/projectConstants\";\nimport Header from \"../components/Header\";\n\nconst ProjectEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const projectId = match.params.id;\n  const [heading, setHeading] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [client, setClient] = useState(\"\");\n  const [imag, setImag] = useState(\"\");\n  const [longDesc, setLongDesc] = useState(\"\");\n  const [note1, setNote1] = useState(\"\");\n  const [note2, setNote2] = useState(\"\");\n  const [note3, setNote3] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const projectDetails = useSelector(state => state.projectDetails);\n  const {\n    loading,\n    error,\n    project\n  } = projectDetails;\n  const projectUpdate = useSelector(state => state.projectUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = projectUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PROJECT_UPDATE_RESET\n      });\n      history.push(\"/admin/projectlist\");\n    } else {\n      if (!project.hd || project._id !== projectId) {\n        dispatch(listProjectDetails(projectId));\n      } else {\n        setHeading(project.hd);\n        setDescription(project.desc);\n        setClient(project.client);\n        setImag(project.imag);\n        setLongDesc(project.longDesc);\n        setNote1(project.note1);\n        setNote2(project.note2);\n        setNote3(project.note3);\n      }\n    }\n  }, [dispatch, history, projectId, project, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setImag(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProject({\n      _id: projectId,\n      hd: heading,\n      desc: description,\n      client,\n      imag,\n      longDesc,\n      note1,\n      note2,\n      note3\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/projectlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"heading\",\n            placeholder: \"Enter heading\",\n            value: heading,\n            onChange: e => setHeading(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"description\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"client\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"client\",\n            placeholder: \"Enter client\",\n            value: client,\n            onChange: e => setClient(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"imag\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter image url\",\n            value: imag,\n            onChange: e => setImag(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\",\n            label: \"Choose File\",\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"longDesc\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Long Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"long description\",\n            placeholder: \"Enter long description\",\n            value: longDesc,\n            onChange: e => setLongDesc(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"note1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Note1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"note1\",\n            placeholder: \"Enter note1\",\n            value: note1,\n            onChange: e => setNote1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"note2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Note2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"note2\",\n            placeholder: \"Enter note2\",\n            value: note2,\n            onChange: e => setNote2(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"note3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Note3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"note3\",\n            placeholder: \"Enter note3\",\n            value: note3,\n            onChange: e => setNote3(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProjectEditScreen, \"moL+fPTnaFOkgSQBK+ei0aUF0kw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProjectEditScreen;\nexport default ProjectEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectEditScreen\");","map":{"version":3,"sources":["/Users/gabrielhauschildt/Desktop/ProShop/frontend/src/screens/ProjectEditScreen.js"],"names":["axios","React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","listProjectDetails","updateProject","PROJECT_UPDATE_RESET","Header","ProjectEditScreen","match","history","projectId","params","id","heading","setHeading","description","setDescription","client","setClient","imag","setImag","longDesc","setLongDesc","note1","setNote1","note2","setNote2","note3","setNote3","uploading","setUploading","dispatch","projectDetails","state","loading","error","project","projectUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","hd","_id","desc","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Form, Button } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport FormContainer from \"../components/FormContainer\"\nimport { listProjectDetails, updateProject } from \"../actions/projectActions\"\nimport { PROJECT_UPDATE_RESET } from \"../constants/projectConstants\"\nimport Header from \"../components/Header\"\n\nconst ProjectEditScreen = ({ match, history }) => {\n  const projectId = match.params.id\n\n  const [heading, setHeading] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [client, setClient] = useState(\"\")\n  const [imag, setImag] = useState(\"\")\n  const [longDesc, setLongDesc] = useState(\"\")\n  const [note1, setNote1] = useState(\"\")\n  const [note2, setNote2] = useState(\"\")\n  const [note3, setNote3] = useState(\"\")\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const projectDetails = useSelector(state => state.projectDetails)\n  const { loading, error, project } = projectDetails\n\n  const projectUpdate = useSelector(state => state.projectUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = projectUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PROJECT_UPDATE_RESET })\n      history.push(\"/admin/projectlist\")\n    } else {\n      if (!project.hd || project._id !== projectId) {\n        dispatch(listProjectDetails(projectId))\n      } else {\n        setHeading(project.hd)\n        setDescription(project.desc)\n        setClient(project.client)\n        setImag(project.imag)\n        setLongDesc(project.longDesc)\n        setNote1(project.note1)\n        setNote2(project.note2)\n        setNote3(project.note3)\n      }\n    }\n  }, [dispatch, history, projectId, project, successUpdate])\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append(\"image\", file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }\n\n      const { data } = await axios.post(\"/api/upload\", formData, config)\n\n      setImag(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      updateProject({\n        _id: projectId,\n        hd: heading,\n        desc: description,\n        client,\n        imag,\n        longDesc,\n        note1,\n        note2,\n        note3\n      })\n    )\n  }\n\n  return (\n    <>\n      <Header />\n      <Link to='/admin/projectlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Project</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='heading'>\n              <Form.Label>Heading</Form.Label>\n              <Form.Control\n                type='heading'\n                placeholder='Enter heading'\n                value={heading}\n                onChange={e => setHeading(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='description'\n                placeholder='Enter description'\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='client'>\n              <Form.Label>Client</Form.Label>\n              <Form.Control\n                type='client'\n                placeholder='Enter client'\n                value={client}\n                onChange={e => setClient(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='imag'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={imag}\n                onChange={e => setImag(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='longDesc'>\n              <Form.Label>Long Description</Form.Label>\n              <Form.Control\n                type='long description'\n                placeholder='Enter long description'\n                value={longDesc}\n                onChange={e => setLongDesc(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='note1'>\n              <Form.Label>Note1</Form.Label>\n              <Form.Control\n                type='note1'\n                placeholder='Enter note1'\n                value={note1}\n                onChange={e => setNote1(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='note2'>\n              <Form.Label>Note2</Form.Label>\n              <Form.Control\n                type='note2'\n                placeholder='Enter note2'\n                value={note2}\n                onChange={e => setNote2(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId='note3'>\n              <Form.Label>Note3</Form.Label>\n              <Form.Control\n                type='note3'\n                placeholder='Enter note3'\n                value={note3}\n                onChange={e => setNote3(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProjectEditScreen\n"]},"metadata":{},"sourceType":"module"}