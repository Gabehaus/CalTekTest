{"ast":null,"code":"import _toConsumableArray from\"/Users/gabrielhauschildt/Desktop/ProshopDeployTest/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{Pagination}from\"react-bootstrap\";import{LinkContainer}from\"react-router-bootstrap\";var Paginate=function Paginate(_ref){var pages=_ref.pages,page=_ref.page,_ref$isAdmin=_ref.isAdmin,isAdmin=_ref$isAdmin===void 0?false:_ref$isAdmin,_ref$isProject=_ref.isProject,isProject=_ref$isProject===void 0?false:_ref$isProject,_ref$keyword=_ref.keyword,keyword=_ref$keyword===void 0?\"\":_ref$keyword;return pages>1&&/*#__PURE__*/_jsx(Pagination,{children://remember ...Array(pages) gives an array of undefined elements, then using .keys() retruns an array with the index of each element - something like [0,1,2] if you have 3 pages\n// the prop isAdmin is passed to this component as \"true\" in the ProductListScreen\n_toConsumableArray(Array(pages).keys()).map(function(x){return/*#__PURE__*/_jsx(LinkContainer,{to:!isProject?!isAdmin?keyword?\"/search/\".concat(keyword,\"/page/\").concat(x+1):\"/page/\".concat(x+1):\"/admin/productlist/\".concat(x+1):\"/admin/projectlist/\".concat(x+1),children:/*#__PURE__*/_jsx(Pagination.Item,{active:x+1===page,children:x+1})},x+1);})});};export default Paginate;","map":{"version":3,"sources":["/Users/gabrielhauschildt/Desktop/ProshopDeployTest/frontend/src/components/Paginate.js"],"names":["React","Pagination","LinkContainer","Paginate","pages","page","isAdmin","isProject","keyword","Array","keys","map","x"],"mappings":"qOAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,iBAA3B,CACA,OAASC,aAAT,KAA8B,wBAA9B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAMX,IALJC,CAAAA,KAKI,MALJA,KAKI,CAJJC,IAII,MAJJA,IAII,mBAHJC,OAGI,CAHJA,OAGI,uBAHM,KAGN,kCAFJC,SAEI,CAFJA,SAEI,yBAFQ,KAER,kCADJC,OACI,CADJA,OACI,uBADM,EACN,cACJ,MACEJ,CAAAA,KAAK,CAAG,CAAR,eACE,KAAC,UAAD,WACG;AACD;AACA,mBAAIK,KAAK,CAACL,KAAD,CAAL,CAAaM,IAAb,EAAJ,EAAyBC,GAAzB,CAA6B,SAAAC,CAAC,qBAC5B,KAAC,aAAD,EAEE,EAAE,CACA,CAACL,SAAD,CACI,CAACD,OAAD,CACEE,OAAO,mBACMA,OADN,kBACsBI,CAAC,CAAG,CAD1B,kBAEIA,CAAC,CAAG,CAFR,CADT,8BAIwBA,CAAC,CAAG,CAJ5B,CADJ,8BAM0BA,CAAC,CAAG,CAN9B,CAHJ,uBAYE,KAAC,UAAD,CAAY,IAAZ,EAAiB,MAAM,CAAEA,CAAC,CAAG,CAAJ,GAAUP,IAAnC,UAA0CO,CAAC,CAAG,CAA9C,EAZF,EACOA,CAAC,CAAG,CADX,CAD4B,EAA9B,CAHF,EAFJ,CAwBD,CA/BD,CAiCA,cAAeT,CAAAA,QAAf","sourcesContent":["import React from \"react\"\nimport { Pagination } from \"react-bootstrap\"\nimport { LinkContainer } from \"react-router-bootstrap\"\n\nconst Paginate = ({\n  pages,\n  page,\n  isAdmin = false,\n  isProject = false,\n  keyword = \"\"\n}) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {//remember ...Array(pages) gives an array of undefined elements, then using .keys() retruns an array with the index of each element - something like [0,1,2] if you have 3 pages\n        // the prop isAdmin is passed to this component as \"true\" in the ProductListScreen\n        [...Array(pages).keys()].map(x => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isProject\n                ? !isAdmin\n                  ? keyword\n                    ? `/search/${keyword}/page/${x + 1}`\n                    : `/page/${x + 1}`\n                  : `/admin/productlist/${x + 1}`\n                : `/admin/projectlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n"]},"metadata":{},"sourceType":"module"}